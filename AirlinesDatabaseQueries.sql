--QUERIES

-- Getting number of arrival per airport. 
SELECT destination AS ArrivalAirportCode, COUNT(*) AS ArrivalFlights
FROM Flights
GROUP BY destination
ORDER BY ArrivalFlights DESC;


-- Getting number of tickets sold per flight per class. 
SELECT flight_id, class, COUNT(*) AS TicketsCount
FROM Tickets
GROUP BY flight_id, class
ORDER BY flight_id;


-- Getting average ticket price per customer. 
SELECT p.passenger_id,p.first_name, p.last_name, AVG(t.price) AS average_ticket_price
FROM Passengers p
JOIN Tickets t ON p.passenger_id = t.passenger_id
GROUP BY
   p.passenger_id,
   p.first_name,
   p.last_name
ORDER BY
   p.passenger_id;
   
   
-- Listing all flights that are scheduled to depart in the future.
SELECT *
FROM Flights
WHERE departure_time > SYSDATE;
ORDER BY departure_time;


-- Retrieving detailed information about the passenger who made a specific reservation.
SELECT Passengers.passenger_id, Passengers.first_name, Passengers.last_name, Passengers.email, Passengers.phone, Passengers.loyalty_program
FROM Passengers
JOIN Reservations ON Passengers.passenger_id = Reservations.passenger_id
WHERE Reservations.reservation_id = 1; 


 -- Retrieving detailed information about all the passengers from a reservation. 
SELECT
   p.first_name, p.last_name,p.gender, p.email, 
   p.loyalty_program, r.reservation_id,
   r.flight_id, r.reservation_date,
   r.travel_date, r.status AS reservation_status,
   t.seat, t.class, t.price, t.status AS ticket_status
FROM
   Passengers p
JOIN
   Tickets t ON p.passenger_id = t.passenger_id
JOIN
   Reservations r ON t.reservation_id = r.reservation_id
WHERE
   r.reservation_id = :reservation_id;
   

 --  Listing all reservations for a particular flight, including the passenger who made the reservation and reservation status. 
SELECT Reservations.reservation_id, Reservations.status, Reservations.reservation_date, Reservations.travel_date, Passengers.first_name, Passengers.last_name
FROM Reservations
JOIN Passengers ON Reservations.passenger_id = Passengers.passenger_id
WHERE Reservations.flight_id = 1
ORDER BY Reservations.reservation_date;
   

 -- Calculating the total revenue generated by a particular flight. 
SELECT Flights.flight_id, SUM(FinancialTransactions.amount) AS total_revenue
FROM Flights
JOIN Reservations ON Flights.flight_id = Reservations.flight_id
JOIN FinancialTransactions ON Reservations.reservation_id = FinancialTransactions.reservation_id
WHERE Flights.flight_id = 1 
GROUP BY Flights.flight_id;


-- Listing all financial transactions made using a specific payment method.
SELECT transaction_id, reservation_id, amount, transaction_date
FROM FinancialTransactions
WHERE payment_method = 'credit_card' 
ORDER BY transaction_date;


-- Finding flights that currently have no reservations. 
SELECT Flights.flight_id, Flights.origin, Flights.destination, Flights.departure_time, Flights.arrival_time
FROM Flights
LEFT JOIN Reservations ON Flights.flight_id = Reservations.flight_id
WHERE Reservations.reservation_id IS NULL;


-- Identifying passengers who have taken the most seat reservation. 
SELECT Passengers.passenger_id, Passengers.first_name, Passengers.last_name, COUNT(Reservations.reservation_id) AS flight_count
FROM Passengers
JOIN Reservations ON Passengers.passenger_id = Reservations.passenger_id
JOIN Tickets ON Reservations.reservation_id = Tickets.reservation_id
WHERE Tickets.status = 'issued'
GROUP BY Passengers.passenger_id, Passengers.first_name, Passengers.last_name
ORDER BY flight_count DESC;


-- Identifying passengers who have taken the most flights. 
SELECT Passengers.passenger_id, Passengers.first_name, Passengers.last_name, COUNT(Tickets.PASSENGER_ID) AS flight_count
FROM Passengers
JOIN Tickets ON  Passengers.PASSENGER_ID= Tickets.passenger_id
WHERE Tickets.status = 'issued'
GROUP BY Passengers.passenger_id, Passengers.first_name, Passengers.last_name
ORDER BY flight_count DESC;


-- Getting most popular flight per number of tickets. 
SELECT
   t.flight_id,  f.origin AS DepartureAirportCode,  f.destination AS ArrivalAirportCode, COUNT(*) AS TicketsSold
FROM Tickets t
JOIN Flights f ON t.flight_id = f.flight_id
GROUP BY
   t.flight_id,
   f.origin,
   f.destination
ORDER BY
   TicketsSold DESC;

